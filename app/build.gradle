apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.tiparo.tripway"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        /* TODO а в своем проекте я вообще вынес это в чтение файлика local.properties который в гитигнори хранится и каждый разраб может подменять по желанию поле у себя и не аффектить других
            def properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            def localServerIp = properties.getProperty("serverIp")
            def serverIp = "89.208.211.219"
            if (localServerIp != null)
                serverIp = localServerIp
         */
        buildConfigField "String", "host", "\"89.208.211.219\""
        buildConfigField "int", "port", "8080"
        buildConfigField "String", "scheme", "\"http\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://tripway.ru.com/tripway/\""
            buildConfigField "String", "GOOGLE_MAPS_URL", "\"https://maps.googleapis.com/\""
            buildConfigField "String", "GOOGLE_MAPS_KEY",
                    (project.findProperty("GOOGLE_MAPS_API_KEY").toString() ?: "")
            resValue "string", "google_maps_key",
                    (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
        }
        debug {
            buildConfigField "String", "BASE_URL", "\"https://tripway.ru.com/tripway/\""
            buildConfigField "String", "GOOGLE_MAPS_URL", "\"https://maps.googleapis.com/\""
            buildConfigField "String", "GOOGLE_MAPS_KEY",
                    "\"${project.findProperty("GOOGLE_MAPS_API_KEY")}\""
            resValue "string", "google_maps_key",
                    (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
        }
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    dataBinding {
        enabled = true
    }

    kotlinOptions { jvmTarget = "1.8" }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.fragment:fragment-ktx:1.2.3"
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.4.0"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.4.0'

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
}

dependencies {
    def nav_version = "2.3.0-alpha04"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}

dependencies {
    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
}

dependencies {
    def dagger_version = "2.27"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
}

dependencies{
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.2.0'
}

dependencies {
    implementation 'com.zhihu.android:matisse:0.5.3-beta3'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
}